1. Describe the problem generics address.
Generics allows us to design classes or methods but defer the specification of types until the class
or method is declared or called. It address the problem of type safety and code reusability by allowing
developers to create classes, methods and collections that can work with any data type while enforcing type
checks at compile time.

2. How would you create a list of strings, using the generic List class?
List<String> ls = new List<>();

3. How many generic type parameters does the Dictionary class have?
Two, TKey, TValue

4. True/False. When a generic class has multiple type parameters, they must all match.
No

5. What method is used to add items to a List object?
Add()

6. Name two methods that cause items to be removed from a List.
Remove(item)
RemoveAt(index)

7. How do you indicate that a class has a generic type parameter?
Use angle brackets <T> after the class name.

8. True/False. Generic classes can only have one generic type parameter.
False.

9. True/False. Generic type constraints limit what can be used for the generic type.
True

10. True/False. Constraints let you use the methods of the thing you are constraining to.
True